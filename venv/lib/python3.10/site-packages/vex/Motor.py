from .Constants import *


class Motor:
    # noinspection PyUnusedLocal
    def __init__(self, port, gear_ratio, inverted):
        pass

    @staticmethod
    def spin(direction, voltage=10, unit=VOLT):
        pass

    @staticmethod
    def spin_for(direction, amount, unit=DEGREES):
        pass

    @staticmethod
    def stop():
        pass

    @staticmethod
    def set_position(position, unit=DEGREES):
        pass

    @staticmethod
    def position(*args):
        return 0

    @staticmethod
    def set_velocity(velocity, unit=PERCENT):
        pass

    @staticmethod
    def velocity(unit=RPM):
        return 0

    @staticmethod
    def set_stopping(stopping_mode):
        pass

    @staticmethod
    def spin_to_position(position, unit, wait=True):
        pass

    @staticmethod
    def set_max_torque(amount, unit=PERCENT):
        pass

    @staticmethod
    def set_timeout(time, unit=SECONDS):
        pass


class MotorGroup:
    def __init__(self, *motors):
        pass

    def spin(self, direction):
        pass

    def set_stopping(self, stopping_mode):
        pass

    def set_velocity(self, velocity, unit=PERCENT):
        pass

    # noinspection PyUnusedLocal
    @staticmethod
    def position(unit=DEGREES):
        return 0

    def stop(self):
        pass
